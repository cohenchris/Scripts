#!/bin/sh

# This is a wrapper script for lf that:
# - Allows creating image previews with ueberzug.
# - Changes the shell directory to the last visited directory after lf exits.

set -e


# Cleanup ueberzug FIFO + reset the environment
cleanup() {
  exec 3>&-
	rm "${FIFO_UEBERZUG}"
}


# Wrapper to update the working directory after exiting lf
lfcd() {
  # Create temp file to store the cwd
  local tmp="$(mktemp)"
  
  # Launch lf
  # On exit, print out the last working directory into the temp file
  command lf -last-dir-path="${tmp}" "$@"

  # cd to the last working directory
  if [ -f "${tmp}" ]; then
    dst_dir="$(cat "${tmp}")"
    rm -f "${tmp}"
    [ -d "${dst_dir}" ] && cd "${dst_dir}" || echo "Directory ${dst_dir} not found..."
  fi
}


if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
  # Running inside SSH, just execute normal lf
	lf "$@"
else
  # Running locally, set up ueberzug for image previews
  [ ! -d "${HOME}/.cache/lf" ] && mkdir -p "$HOME/.cache/lf"

  # Create unique FIFO (named pipe) for communication with ueberzug
  export FIFO_UEBERZUG="${HOME}/.cache/lf/ueberzug-$$"
  mkfifo "${FIFO_UEBERZUG}"

  # Start ueberzug + redirect to FIFO (file descriptor 3 is convention for this)
  ueberzug layer -s <"${FIFO_UEBERZUG}" -p json &
  exec 3>"${FIFO_UEBERZUG}"

  # Run cleanup on various signal events
  trap cleanup HUP INT QUIT TERM PWR EXIT

  # Execute LF (with the cd wrapper script)
  lfcd "$@" 3>&-
fi
